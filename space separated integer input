#include<bits/stdc++.h>
using namespace std;
vector<string> split_string(string input_string) {
    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char &x, const char &y) {
        return x == y and x == ' ';
    });

    input_string.erase(new_end, input_string.end());

    while (input_string[input_string.length() - 1] == ' ') {
        input_string.pop_back();
    }

    vector<string> splits;
    char delimiter = ' ';

    size_t i = 0;
    size_t pos = input_string.find(delimiter);

    while (pos != string::npos) {
        splits.push_back(input_string.substr(i, pos - i));

        i = pos + 1;
        pos = input_string.find(delimiter, i);
    }

    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));

    return splits;
}

int main()
{
    string s1,s2;
    getline(cin,s1);
    getline(cin,s2);
    int i;
    vector<string> a_temp = split_string(s1);
    vector<int> v1;
    for (int i = 0; i < a_temp.size(); i++) {
        int a_item = stoi(a_temp[i]);

        v1.push_back(a_item);
    }
    vector<string> a_temp22 = split_string(s2);
    vector<int> v3,v2;
    for (int i = 0; i < a_temp22.size(); i++) {
        int a_item22 = stoi(a_temp22[i]);

        v2.push_back(a_item22);
    }

    int key=0;
   for(int j=0;j<v2.size();++j)
    {
        if(j!=0)
            if(v2[j]<v2[j-1])
                key=j;
    }
    for(i=0;i<v1.size();++i)
        cout<<v1[i]<<' ';
    cout<<endl;


    for(i=0;i<v1.size();++i)
        {
            for(int j=0;j<v2.size();++j)
                if(v2[j]==v1[i])
                    v3.push_back(j);
        }
    for(i=0;i<v3.size();++i)
        cout<<(v3[i]-key+v2.size())%v2.size()<<endl;

    return 0;
}



